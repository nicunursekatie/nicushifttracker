rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // ==========================================
    // HELPER FUNCTIONS
    // ==========================================

    /**
     * Check if user is authenticated
     */
    function isAuthenticated() {
      return request.auth != null;
    }

    /**
     * Check if the authenticated user matches the userId in the path
     */
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    /**
     * Check if document has PHI detection flag
     * (Prevents clients from bypassing Cloud Function validation)
     */
    function hasNoPhiFlag() {
      return !('_phiDetected' in request.resource.data) &&
             !('_phiFindings' in request.resource.data);
    }

    /**
     * Validate baby document structure
     */
    function isValidBaby() {
      let data = request.resource.data;

      return data.keys().hasAll(['internalID_Nickname']) &&
             data.internalID_Nickname is string &&
             data.internalID_Nickname.size() > 0 &&
             data.internalID_Nickname.size() < 100 &&

             // Ensure arrays exist and are arrays
             (!('touchTimeLogs' in data) || data.touchTimeLogs is list) &&
             (!('eventLogs' in data) || data.eventLogs is list) &&
             (!('reportSheet' in data) || data.reportSheet is map) &&

             // Limit array sizes (prevent abuse)
             (!('touchTimeLogs' in data) || data.touchTimeLogs.size() <= 20) &&
             (!('eventLogs' in data) || data.eventLogs.size() <= 50);
    }

    /**
     * Validate shift document structure
     */
    function isValidShift() {
      let data = request.resource.data;

      return data.keys().hasAll(['shiftDate', 'shiftStartTime', 'assignmentType']) &&
             data.shiftDate is string &&
             data.shiftStartTime is string &&
             data.assignmentType in ['ICU', 'Intermediate'];
    }

    // ==========================================
    // USER-SCOPED DATA (Main Application Data)
    // ==========================================

    /**
     * Root artifacts - no direct access
     */
    match /artifacts/{appId} {
      allow read, write: if false;

      /**
       * User collection - users can only access their own data
       */
      match /users/{userId} {
        // Only the authenticated user can read/write their own data
        allow read, write: if isOwner(userId);

        /**
         * NICU Shifts collection
         */
        match /nicu_shifts/{shiftId} {
          // User can read/write their own shifts
          allow read: if isOwner(userId);
          allow create: if isOwner(userId) &&
                          isValidShift() &&
                          hasNoPhiFlag();
          allow update: if isOwner(userId) &&
                          isValidShift() &&
                          hasNoPhiFlag();
          allow delete: if isOwner(userId);

          /**
           * Babies subcollection
           */
          match /babies/{babyId} {
            // User can read/write babies in their own shifts
            allow read: if isOwner(userId);
            allow create: if isOwner(userId) &&
                            isValidBaby() &&
                            hasNoPhiFlag();
            allow update: if isOwner(userId) &&
                            isValidBaby() &&
                            hasNoPhiFlag();
            allow delete: if isOwner(userId);
          }
        }

        /**
         * User settings (future use)
         */
        match /settings/{document=**} {
          allow read, write: if isOwner(userId);
        }

        /**
         * Archived shifts (future use)
         */
        match /archived_shifts/{shiftId} {
          allow read, write: if isOwner(userId);

          match /{document=**} {
            allow read, write: if isOwner(userId);
          }
        }
      }
    }

    // ==========================================
    // PHI VIOLATIONS LOG (Admin/Audit Only)
    // ==========================================

    /**
     * PHI violations - only Cloud Functions can write
     * Only admins can read (for audit purposes)
     */
    match /phi_violations/{violationId} {
      allow read: if request.auth.token.admin == true;
      allow write: if false; // Only Cloud Functions can write
    }

    // ==========================================
    // DENY ALL OTHER ACCESS
    // ==========================================

    /**
     * Explicitly deny access to all other paths
     */
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
